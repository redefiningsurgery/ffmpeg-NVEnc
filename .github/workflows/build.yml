name: Build FFmpeg

on:
  push:
    branches:
      - main

jobs:

  build-cuda-ubuntu-docker:
    name: build in ubuntu docker with cuda
    strategy:
      matrix:
        os: ['20.04']
    runs-on: ubuntu-latest
    permissions:
      contents: write    

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set Envs
        run: |
          echo "NVENC_VERSION=$(curl -fsSLI -o /dev/null -w %{url_effective} https://github.com/rigaya/NVEnc/releases/latest | rev | cut -d '/' -f 1 | rev)" >> $GITHUB_ENV
          echo "FFMPEG_VERSION=5.1" >> $GITHUB_ENV

      - name: build ffmpeg
        run: |
          docker build --build-arg VER=${{ matrix.os }} --build-arg FFMPEG_VERSION=${{ env.FFMPEG_VERSION }} \
           --build-arg NVENC_VERSION=${{ env.NVENC_VERSION }} -t  \
           ffmpeg:cuda-ubuntu${{ matrix.os }} -f cuda-ubuntu.dockerfile .

      - name: copy build
        run: |
          docker run --rm  -v ${{ github.workspace }}/artifacts:/app/artifacts \
           -e VER=${{ matrix.os }} ffmpeg:cuda-ubuntu${{ matrix.os }} bash copyfiles.sh
          sudo chmod -R 777 ${{ github.workspace }}/artifacts/

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ffmpeg
          path: artifacts/*

  # publish_release:
  #   name: Publish release
  #   needs: build-cuda-ubuntu-docker
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3

  #     - name: Download artifacts
  #       uses: actions/download-artifact@v3
  #       with:
  #         name: ffmpeg
  #         path: artifacts

  #     - name: Set Envs
  #       run: |
  #         echo "NVENC_VERSION=$(curl -fsSLI -o /dev/null -w %{url_effective} https://github.com/rigaya/NVEnc/releases/latest | rev | cut -d '/' -f 1 | rev)" >> $GITHUB_ENV
  #         echo "FFMPEG_VERSION=5.1" >> $GITHUB_ENV

  #     - name: Delete release
  #       run: gh release delete latest --cleanup-tag -y
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.PAT }}
      
  #     - name: Upload modules to release
  #       uses: softprops/action-gh-release@v1
  #       with:
  #         token: ${{ secrets.PAT }}
  #         tag_name: latest
  #         files: ${{ github.workspace }}/artifacts/**/*
  #         name: FFmpeg-${{ env.FFMPEG_VERSION }}-Nvencc-${{ env.NVENC_VERSION }}
  #         draft: false
  #         prerelease: false